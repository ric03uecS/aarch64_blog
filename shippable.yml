resources:
  - name: app_registry
    type: cliConfig
    integration: app_registry

  - name: app_image
    type: image
    integration: app_registry
    pointer:
      sourceName: ric03uec/aarch64_app
    seed:
      versionName: master

  - name: app_params
    type: params
    versionTemplate:
      params:
        RUN_MODE: production
        REGION: seattle
        TITLE: welcome to demo blog

  ## PEM key integration to be used to ssh into deployment host
  - name: app_deploy_key
    type: integration
    integration: app_deployment

  ## Key-value pair integration with "username" and "ip" of deployment host
  - name: app_deployment_endpoint
    type: integration
    integration: app_deployment_endpoint

jobs:
  - name: aarch64_blog_runCI
    type: runCI
    steps:
      - IN: app_registry
      - OUT: app_image

  - name: deploy_app
    type: runSh
    runtime:
      nodePool: aarch64_ubuntu1604
    steps:
      - IN: app_deploy_key
      - IN: app_deployment_endpoint
      - IN: aarch64_blog
        switch: off
      - IN: app_registry
        switch: off
      - IN: app_image
        switch: off
      - IN: app_params
        switch: off
      - TASK:
          name: deploy_app_image
          script:
            - pushd $(shipctl get_resource_state "aarch64_blog")
            - ./deploy.sh
            - popd

  - name: test_deployment
    type: runSh
    runtime:
      nodePool: aarch64_ubuntu1604
    steps:
      - IN: app_deployment_endpoint
      - IN: deploy_app
      - IN: aarch64_blog
        switch: off
      - TASK:
          name: test_app_deployment
          script:
            - pushd $(shipctl get_resource_state "aarch64_blog")
            - ./test_deployment.sh
            - popd
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'

################################################
################ CI Config #####################
################################################
language: node_js
node_js:
  - 8.4.0

runtime:
  nodePool: aarch64_ubuntu1604

env:
  - APP_IMAGE_REPO=ric03uec/aarch64_app
build:
  pre_ci_boot:
    image_name: drydock/aarch64_u16nodall
    image_tag: v6.2.4
  ci:
    - node --version
    - npm install
    - export XUNIT_FILE=shippable/testresults/result.xml
    - npm test
    - mkdir -p shippable/testresults
    - ./node_modules/.bin/istanbul report cobertura --dir  shippable/codecoverage/
  on_success:
    - echo "Pushing the image after successful build and updating the tag"
    - export IMAGE_NAME=$APP_IMAGE_REPO:$BUILD_NUMBER
    - docker build -t $IMAGE_NAME -f Dockerfile .
    - docker push $IMAGE_NAME
    - export IMAGE_VERSION_FILE="$APP_IMAGE_NAME.env"
    - echo versionName=$IMAGE_NAME > "$IMAGE_VERSION_FILE"
    - shipctl copy_file_to_state "$IMAGE_VERSION_FILE"

integrations:
  hub:
    - integrationName: app_registry
      type: docker
