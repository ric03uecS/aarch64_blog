resources:
  - name: app_registry
    type: cliConfig
    integration: app_registry

  - name: app_image
    type: image
    integration: app_registry
    pointer:
      sourceName: ric03uec/aarch64_app
    seed:
      versionName: master

  - name: app_deploy_key
    type: integration
    integration: app_deployment

jobs:
  - name: aarch64_blog_runCI
    type: runCI
    steps:
      - IN: app_registry
      - OUT: app_image

  - name: deploy_app
    type: runSh
    runtime:
      nodePool: aarch64_ubuntu1604
    steps:
      - IN: app_deploy_key
      - IN: aarch64_blog
      - IN: app_registry
        switch: off
      - IN: app_image
        switch: off
      - TASK:
          name: deploy_app_image
          script:
            - ls -atlh $BUILD_DIR/IN
            - pushd $(shipctl get_resource_state "aarch64_blog")
            - ./deploy.sh
            - popd


################################################
################ CI Config #####################
################################################
language: node_js
node_js:
  - 8.4.0

runtime:
  nodePool: aarch64_ubuntu1604

build:
  pre_ci_boot:
    image_name: drydockaarch64/u16nodall
    image_tag: v6.2.4
  ci:
    - node --version
    - docker --version
    - echo "run some tests here"
  on_success:
    - echo "Pushing the image after successful build and updating the tag"
    - export IMAGE_NAME=ric03uec/aarch64_app:$BUILD_NUMBER
    - docker build -t $IMAGE_NAME -f Dockerfile .
    - docker push $IMAGE_NAME
    - export IMAGE_VERSION_FILE="$APP_IMAGE_NAME.env"
    - echo versionName=$IMAGE_NAME > "$IMAGE_VERSION_FILE"
    - shipctl copy_file_to_state "$IMAGE_VERSION_FILE"

integrations:
  hub:
    - integrationName: app_registry
      type: docker
